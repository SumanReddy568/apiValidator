{
    "sourceFile": "js/app.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1747661479919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747663199744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n import { initCurlImport } from './features/curlImport.js';\n import { initSendRequest } from './features/sendRequest.js';\n import { initPreview } from './ui/preview.js';\n import { initSearch } from './ui/search.js';\n+import { initFilterModal, setFilterData } from './ui/filterModal.js';\n \n // Global state (accessible to all modules)\n window.appState = {\n     lastResponse: null,\n@@ -81,24 +82,8 @@\n         }\n     }\n }\n \n-// Docs dropdown functionality\n-const docsBtn = document.getElementById('docs-btn');\n-const docsContent = document.querySelector('.docs-content');\n-\n-docsBtn.addEventListener('click', (e) => {\n-    e.stopPropagation();\n-    docsContent.classList.toggle('show');\n-});\n-\n-// Close dropdown when clicking outside\n-document.addEventListener('click', (e) => {\n-    if (!e.target.closest('.docs-dropdown')) {\n-        docsContent.classList.remove('show');\n-    }\n-});\n-\n document.addEventListener('DOMContentLoaded', function () {\n     // Initialize all modules\n     initFormatToggle();\n     initTabSwitching();\n@@ -111,8 +96,45 @@\n     initSendRequest();\n     initPreview();\n     initSettings();\n     initSearch();\n+    initFilterModal();\n \n     // Load history from localStorage\n     loadHistory();\n+\n+    // Handle docs dropdown\n+    const docsBtn = document.getElementById('docs-btn');\n+    const docsContent = document.querySelector('.docs-content');\n+\n+    if (docsBtn && docsContent) {\n+        docsBtn.addEventListener('click', function (e) {\n+            e.stopPropagation();\n+            docsContent.classList.toggle('show');\n+        });\n+\n+        // Close dropdown when clicking outside\n+        document.addEventListener('click', function (e) {\n+            if (!docsContent.contains(e.target) && e.target !== docsBtn) {\n+                docsContent.classList.remove('show');\n+            }\n+        });\n+    }\n+\n+    // Update the response handling to include filter data setup\n+    async function handleResponse(response) {\n+        // ...existing response handling code...\n+\n+        try {\n+            // Parse response data\n+            const data = await response.json();\n+\n+            // Set filter data\n+            setFilterData(data);\n+\n+            // ...rest of response handling...\n+        } catch (error) {\n+            console.error('Error parsing response:', error);\n+            // Handle error appropriately\n+        }\n+    }\n });\n"
                },
                {
                    "date": 1747663211718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,8 @@\n import { initCurlImport } from './features/curlImport.js';\n import { initSendRequest } from './features/sendRequest.js';\n import { initPreview } from './ui/preview.js';\n import { initSearch } from './ui/search.js';\n-import { initFilterModal, setFilterData } from './ui/filterModal.js';\n \n // Global state (accessible to all modules)\n window.appState = {\n     lastResponse: null,\n@@ -82,8 +81,28 @@\n         }\n     }\n }\n \n+// Handle docs dropdown\n+document.addEventListener('DOMContentLoaded', function() {\n+    const docsBtn = document.getElementById('docs-btn');\n+    const docsContent = document.querySelector('.docs-content');\n+    \n+    if (docsBtn && docsContent) {\n+        docsBtn.addEventListener('click', function(e) {\n+            e.stopPropagation();\n+            docsContent.classList.toggle('show');\n+        });\n+        \n+        // Close dropdown when clicking outside\n+        document.addEventListener('click', function(e) {\n+            if (!docsContent.contains(e.target) && e.target !== docsBtn) {\n+                docsContent.classList.remove('show');\n+            }\n+        });\n+    }\n+});\n+\n document.addEventListener('DOMContentLoaded', function () {\n     // Initialize all modules\n     initFormatToggle();\n     initTabSwitching();\n@@ -96,45 +115,8 @@\n     initSendRequest();\n     initPreview();\n     initSettings();\n     initSearch();\n-    initFilterModal();\n \n     // Load history from localStorage\n     loadHistory();\n-\n-    // Handle docs dropdown\n-    const docsBtn = document.getElementById('docs-btn');\n-    const docsContent = document.querySelector('.docs-content');\n-\n-    if (docsBtn && docsContent) {\n-        docsBtn.addEventListener('click', function (e) {\n-            e.stopPropagation();\n-            docsContent.classList.toggle('show');\n-        });\n-\n-        // Close dropdown when clicking outside\n-        document.addEventListener('click', function (e) {\n-            if (!docsContent.contains(e.target) && e.target !== docsBtn) {\n-                docsContent.classList.remove('show');\n-            }\n-        });\n-    }\n-\n-    // Update the response handling to include filter data setup\n-    async function handleResponse(response) {\n-        // ...existing response handling code...\n-\n-        try {\n-            // Parse response data\n-            const data = await response.json();\n-\n-            // Set filter data\n-            setFilterData(data);\n-\n-            // ...rest of response handling...\n-        } catch (error) {\n-            console.error('Error parsing response:', error);\n-            // Handle error appropriately\n-        }\n-    }\n });\n"
                }
            ],
            "date": 1747661479919,
            "name": "Commit-0",
            "content": "// Main application entry point\nimport { initFormatToggle, formatResponse } from './ui/formatToggle.js';\nimport { initTabSwitching } from './ui/tabSwitching.js';\nimport { initHeaderFunctionality } from './ui/headers.js';\nimport { initParameterFunctionality } from './ui/parameters.js';\nimport { initAuthFunctionality } from './ui/auth.js';\nimport { initFilterFunctionality } from './ui/filters.js';\nimport { initHistoryPanel, loadHistory } from './features/history.js';\nimport { initCurlImport } from './features/curlImport.js';\nimport { initSendRequest } from './features/sendRequest.js';\nimport { initPreview } from './ui/preview.js';\nimport { initSearch } from './ui/search.js';\n\n// Global state (accessible to all modules)\nwindow.appState = {\n    lastResponse: null,\n    prettyPrintEnabled: true\n};\n\nfunction initSettings() {\n    // Get modal elements\n    const settingsBtn = document.getElementById('settings-btn');\n    const modal = document.getElementById('settingsModal');\n    const closeBtn = document.getElementById('closeSettingsModal');\n    const cancelBtn = document.getElementById('cancelSettingsBtn');\n    const saveBtn = document.getElementById('saveSettingsBtn');\n    const defaultHeadersInput = document.getElementById('defaultHeadersInput');\n\n    // Verify elements exist\n    if (!settingsBtn || !modal || !closeBtn || !cancelBtn || !saveBtn || !defaultHeadersInput) {\n        console.error('Settings modal elements not found');\n        return;\n    }\n\n    // Load saved headers\n    try {\n        const savedHeaders = localStorage.getItem('defaultHeaders');\n        if (savedHeaders) {\n            window.appState.defaultHeaders = JSON.parse(savedHeaders);\n            defaultHeadersInput.value = savedHeaders;\n            console.log('Loaded default headers:', window.appState.defaultHeaders);\n        }\n    } catch (e) {\n        console.error('Error loading headers:', e);\n    }\n\n    // Open modal\n    settingsBtn.onclick = function () {\n        console.log('Opening settings modal');\n        modal.style.display = \"block\";\n    }\n\n    // Close modal functions\n    function closeModal() {\n        console.log('Closing settings modal');\n        modal.style.display = \"none\";\n    }\n\n    closeBtn.onclick = closeModal;\n    cancelBtn.onclick = closeModal;\n\n    // Save settings\n    saveBtn.onclick = function () {\n        try {\n            const headerValue = defaultHeadersInput.value || '{}';\n            const parsedHeaders = JSON.parse(headerValue);\n            window.appState.defaultHeaders = parsedHeaders;\n            localStorage.setItem('defaultHeaders', headerValue);\n            console.log('Saved default headers:', parsedHeaders);\n            closeModal();\n        } catch (e) {\n            console.error('Error saving headers:', e);\n            alert('Invalid JSON format. Please check your input.');\n        }\n    }\n\n    // Click outside to close\n    window.onclick = function (event) {\n        if (event.target == modal) {\n            closeModal();\n        }\n    }\n}\n\n// Docs dropdown functionality\nconst docsBtn = document.getElementById('docs-btn');\nconst docsContent = document.querySelector('.docs-content');\n\ndocsBtn.addEventListener('click', (e) => {\n    e.stopPropagation();\n    docsContent.classList.toggle('show');\n});\n\n// Close dropdown when clicking outside\ndocument.addEventListener('click', (e) => {\n    if (!e.target.closest('.docs-dropdown')) {\n        docsContent.classList.remove('show');\n    }\n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    // Initialize all modules\n    initFormatToggle();\n    initTabSwitching();\n    initHeaderFunctionality();\n    initParameterFunctionality();\n    initAuthFunctionality();\n    initFilterFunctionality();\n    initHistoryPanel();\n    initCurlImport();\n    initSendRequest();\n    initPreview();\n    initSettings();\n    initSearch();\n\n    // Load history from localStorage\n    loadHistory();\n});\n"
        }
    ]
}